{"ast":null,"code":"import _classCallCheck from \"C:/Users/vikto/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Ksiazka_z_przepisami/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/vikto/OneDrive/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Ksiazka_z_przepisami/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { User } from './user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService(http, router) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.router = router;\n      this.user = new BehaviorSubject(null);\n    } //Rejestracja nowego użytkownika\n\n\n    _createClass(AuthService, [{\n      key: \"signup\",\n      value: function signup(email, password) {\n        var _this = this;\n\n        return this.http.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + environment.firebaseAPIKey, {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }).pipe(catchError(this.handleError), tap(function (resData) {\n          _this.handleAuthentication(resData.email, resData.localId, resData.idToken, +resData.expiresIn);\n        }));\n      } //Logowania\n\n    }, {\n      key: \"login\",\n      value: function login(email, password) {\n        var _this2 = this;\n\n        return this.http.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + environment.firebaseAPIKey, {\n          email: email,\n          password: password,\n          returnSecureToken: true\n        }).pipe(catchError(this.handleError), tap(function (resData) {\n          _this2.handleAuthentication(resData.email, resData.localId, resData.idToken, +resData.expiresIn);\n        }));\n      } //Wejście\n\n    }, {\n      key: \"logout\",\n      value: function logout() {\n        this.user.next(null);\n        this.router.navigate(['/auth']);\n      } //Odesłania tokena na serwer Firebase\n\n    }, {\n      key: \"handleAuthentication\",\n      value: function handleAuthentication(email, userId, token, expiresIn) {\n        var expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n        var user = new User(email, userId, token, expirationDate);\n        this.user.next(user);\n      } //Wyłapywania błędów rejestracji/logowania\n\n    }, {\n      key: \"handleError\",\n      value: function handleError(errorRes) {\n        var errorMessage = 'Wystąpił nieznany błąd!';\n\n        if (!errorRes.error || !errorRes.error.error) {\n          return throwError(errorMessage);\n        }\n\n        switch (errorRes.error.error.message) {\n          case 'EMAIL_EXISTS':\n            errorMessage = 'Ten e-mail już istnieje';\n            break;\n\n          case 'EMAIL_NOT_FOUND':\n            errorMessage = 'Ten e-mail nie istnieje';\n            break;\n\n          case 'INVALID_PASSWORD':\n            errorMessage = 'To hasło jest nieprawidłowe';\n            break;\n        }\n\n        return throwError(errorMessage);\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}